# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - name: Checkout phase for my pipeline
      uses: actions/checkout@v3

#       steps:
# - uses: actions/checkout@v4
# - uses: actions/setup-java@v4
#   with:
#     distribution: 'temurin'
#     java-version: '21'
#     cache: 'maven'
#     cache-dependency-path: 'sub-project/pom.xml' # optional
# - name: Build with Maven
#   run: mvn -B package --file pom.xml

    - name: Set up Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        architecture: x64
        cache: 'maven'

    - name: Set up Maven
      uses: s4u/setup-maven-action@v1
      with:
        maven-version: '3.9.6'

    - name: Build with Maven
      run: mvn -B package --file java-maven-sonar-argocd-helm-k8s/spring-boot-app/pom.xml

    - name: list current file 
      run: |
        pwd
        ls -a   

    - name: cd into target
      run: |
        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
        ls -a
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_SONAR }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR }}
        SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
      run: |
        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
        mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Command
      run: sudo chmod 666 /var/run/docker.sock
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Set up Docker Buildx
      # run: cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
      uses: docker/setup-buildx-action@v3
      # uses: mr-smithers-excellent/docker-build-push@v4

    - name: CD into spring-boot folder
      run: |
        pwd
        ls -a
        export DOCKER_DEFAULT_PLATFORM=linux/amd64
        # cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
      
    - name: Build and push
      uses: docker/build-push-action@v5
      # uses: mr-smithers-excellent/docker-build-push@v4
      with:
        context: .
        file: ./java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USER }}/ultimate-cicd3:2

